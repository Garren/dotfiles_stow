#!/bin/zsh
export EDITOR="vim"
export TZ=:/etc/localtime

export LC_TYPE=en_US.UTF-8

export go_libs="-lm"
export go_flags="-g -Wall -O3"

# Set PATH
export PATH=$PATH:$HOME/bin

# HOMEBREW
if [ -d "/usr/local/sbin" ]; then
  export PATH=/usr/local/sbin:$PATH
fi

# GO 
if which go >/dev/null; then
  export GOPATH=$HOME/go
  export PATH=$PATH:$GOPATH/bin
fi

if which nvim >/dev/null; then
  export VIMCONFIG=~/.config/nvim
  export VIMDATA=~/.config/share/nvim
  export VISUAL=nvim
  # nvr support
  if [ -d "$HOME/Library/Python/3.7/bin" ]; then
    export PATH=$PATH:"$HOME/Library/Python/3.7/bin"
  fi
fi

if which fzf >/dev/null; then
  # tell fzf to filter files using .gitignore
  # e.g., skip .node_modules, etc.
  if which rg >/dev/null; then
    # use ripgrep if it's installed
    export FZF_DEFAULT_COMMAND='rg --files'
  else
    # default to git (might skip files if they're not
    # in the index
    export FZF_DEFAULT_COMMAND='git ls-files'
  fi
fi

# NODE
if [ -d $HOME/.node_packages ]; then
  export NODE_PATH=$HOME/.node_packages:$NODE_PATH
  export PATH=$HOME/.node_packages/bin:$PATH
else
  export NODE_PATH=/usr/local/lib/node_modules:$NODE_PATH
  export PATH=/usr/local/lib/node_modules/bin:$PATH
fi

# RUBY
if which ruby >/dev/null && which gem >/dev/null; then
  export PATH=$PATH:"$(ruby -r rubygems -e 'puts Gem.user_dir')/bin"
fi

# SML
if which sml >/dev/null && which brew > /dev/null; then
  export PATH=$PATH:"/usr/local/Cellar/smlnj/$(brew list --versions smlnj | tr ' ' '\n' | tail -1)/bin"
fi

# RUST
if which cargo>/dev/null; then
  PATH="$HOME/.cargo/bin:$PATH"
fi

## Prompt
function parse_git_branch {
  ref=$(git symbolic-ref HEAD 2> /dev/null) || return
  echo "("${ref#refs/heads/}")"
}

# https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/lib/spectrum.zsh
typeset -AHg FX FG BG

FX=(
    reset     "%{[00m%}"
    bold      "%{[01m%}" no-bold      "%{[22m%}"
    italic    "%{[03m%}" no-italic    "%{[23m%}"
    underline "%{[04m%}" no-underline "%{[24m%}"
    blink     "%{[05m%}" no-blink     "%{[25m%}"
    reverse   "%{[07m%}" no-reverse   "%{[27m%}"
)

for color in {000..255}; do
    FG[$color]="%{[38;5;${color}m%}"
    BG[$color]="%{[48;5;${color}m%}"
done


ZSH_SPECTRUM_TEXT=${ZSH_SPECTRUM_TEXT:-Arma virumque cano Troiae qui primus ab oris}

# Show all 256 colors with color number
function spectrum_ls() {
  for code in {000..255}; do
    print -P -- "$code: %{$FG[$code]%}$ZSH_SPECTRUM_TEXT%{$reset_color%}"
  done
}

# Show all 256 colors where the background is set to specific color
function spectrum_bls() {
  for code in {000..255}; do
    print -P -- "$code: %{$BG[$code]%}$ZSH_SPECTRUM_TEXT%{$reset_color%}"
  done
}

export CLICOLOR=1
export LSCOLORS=gxBxhxDxfxhxhxhxhxcxcx
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}

#export COLOR_RED="\[\033[0;31m\]"
#export COLOR_LIGHTRED="\[\033[1;31m\]"
#export COLOR_GREEN="\[\033[0;32m\]"
#export COLOR_LIGHTGREEN="\[\033[1;32m\]"
#export COLOR_YELLOW="\[\033[0;33m\]"
#export COLOR_LIGHTYELLOW="\[\033[1;33m\]"
#export COLOR_BLUE="\[\033[0;34m\]"
#export COLOR_LIGHTBLUE="\[\033[1;34m\]"
#export COLOR_PURPLE="\[\033[0;35m\]"
#export COLOR_LIGHTPURPLE="\[\033[1;35m\]"
#export COLOR_CYAN="\[\033[0;36m\]"
export COLOR_LIGHTCYAN="%{\033[1;36m%}"
#export COLOR_WHITE="\[\033[1;37m\]"

setopt PROMPT_SUBST
NEWLINE=$'\n'
PROMPT="%F{045}[%0m]%f%F{205}%~%f:%F{139}%(1j.(%j%).)%f%F{129}%?%f%F{229} \$(parse_git_branch)%f${NEWLINE}$ "

#PS1="$COLOR_LIGHTCYAN[\h]$COLOR_LIGHTRED\w$COLOR_LIGHTPURPLE:\j$COLOR_LIGHTYELLOW \$(parse_git_branch)$COLOR_GREEN\\n$ "
